#!/usr/bin/php
<?php

if(!isset($_SERVER['argv'][1]) || $_SERVER['argv'][1] == '--help'){
?>
Usage: wordwrap [file] [outfile]
file	- The file to wrap. If ommited or not a file, read standard input.
outfile	- The file to place the contents. If ommited, out to standard output.
If the environment variable `WORDWRAP' is set and numeric, wordwrap will wrap
to that many lines. Default 100.
<?php
	return 0;
}

function stdin_wrap(){
	$file = file_get_contents('php://stdin');
	$word = isset($_SERVER['WORDWRAP'])? $_SERVER['WORDWRAP']: 100;
	$wrap = wordwrap($file, $word, "\n", isset($_SERVER['WORDWRAP_CUT'])).chr(10);
	unset($file);
	if(isset($_SERVER['argv'][2]) && !empty($_SERVER['argv'][2])){
		file_put_contents($_SERVER['argv'][2], $wrap);
		return 0;
	}else{
		file_put_contents('php://stdout', $wrap);
		return 0;
	}
}

if(file_exists($_SERVER['argv'][1])){
	if(is_file($_SERVER['argv'][1])){
		$file = file_get_contents($_SERVER['argv'][1]);
		$wrap = wordwrap($file, isset($_SERVER['WORDWRAP'])? $_SERVER['WORDWRAP']: 100, "\n", isset($_SERVER['WORDWRAP_CUT'])).chr(10);
		unset($file);
		if(isset($_SERVER['argv'][2]) && !empty($_SERVER['argv'][2])){
			file_put_contents($_SERVER['argv'][2], $wrap);
			return 0;
		}else{
			file_put_contents('php://stdout', $wrap);
			return 0;
		}
	}else{
		return stdin_wrap();
	}
}else{
	return stdin_wrap();
}

